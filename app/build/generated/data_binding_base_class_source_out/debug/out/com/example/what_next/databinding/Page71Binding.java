// Generated by view binder compiler. Do not edit!
package com.example.what_next.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.what_next.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Page71Binding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout expandable;

  @NonNull
  public final TextView tvAppliMode;

  @NonNull
  public final TextView tvEligibility;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvPurpose;

  @NonNull
  public final TextView tvSource;

  private Page71Binding(@NonNull CardView rootView, @NonNull LinearLayout expandable,
      @NonNull TextView tvAppliMode, @NonNull TextView tvEligibility, @NonNull TextView tvName,
      @NonNull TextView tvPurpose, @NonNull TextView tvSource) {
    this.rootView = rootView;
    this.expandable = expandable;
    this.tvAppliMode = tvAppliMode;
    this.tvEligibility = tvEligibility;
    this.tvName = tvName;
    this.tvPurpose = tvPurpose;
    this.tvSource = tvSource;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static Page71Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Page71Binding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.page7_1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Page71Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.expandable;
      LinearLayout expandable = rootView.findViewById(id);
      if (expandable == null) {
        break missingId;
      }

      id = R.id.tv_appliMode;
      TextView tvAppliMode = rootView.findViewById(id);
      if (tvAppliMode == null) {
        break missingId;
      }

      id = R.id.tv_eligibility;
      TextView tvEligibility = rootView.findViewById(id);
      if (tvEligibility == null) {
        break missingId;
      }

      id = R.id.tv_name;
      TextView tvName = rootView.findViewById(id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_purpose;
      TextView tvPurpose = rootView.findViewById(id);
      if (tvPurpose == null) {
        break missingId;
      }

      id = R.id.tv_source;
      TextView tvSource = rootView.findViewById(id);
      if (tvSource == null) {
        break missingId;
      }

      return new Page71Binding((CardView) rootView, expandable, tvAppliMode, tvEligibility, tvName,
          tvPurpose, tvSource);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
